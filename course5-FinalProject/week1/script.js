var memoji = ['üêÆ', 'üêì', 'ü¶É', 'üêü', 'ü¶Ñ', 'üêû'];

Array.prototype.valueShuffle = function(){
    var i = this.length, j, temp;
    while(--i > 0){
        j = Math.floor(Math.random() * (i+1));
        temp = this[j];
        this[j] = this[i];
        this[i] = temp;
    }
}

//–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
function Card(id, content) {
    this.value = content;
    this.id = id;
}
Card.prototype.createNode = function() {
    this.node = document.createElement('div');
    this.node.setAttribute('id', this.id);
    this.node.classList.add('card');
    this.node.innerHTML = '<div class="side front">' + this.value + '</div><div class="side back"></div>';
    return this.node;
}

//–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞ –∏–≥—Ä—ã
function Game() {
    this.playground = document.getElementById('playground');
    this.values = memoji.concat(memoji);
    this.cards = {};
    this.cardsSelected = { length: 0 };
}
Game.prototype.start = function() {
    
    //–ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    this.values.valueShuffle();

    //–†–∞—Å–∫–ª–∞–¥—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    for (var i = 0; i < this.values.length; i++) {
        this.cards[i] = new Card(i, this.values[i]);
        this.playground.appendChild(this.cards[i].createNode());
    }

    //–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—ä–µ–∫—Ç–∞ –∏–≥—Ä—ã
    var self = this;

    //–î–µ–ª–µ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
    this.playground.addEventListener('click', function(event){

        //–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–ª–∏–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
        if (event.target.classList.contains('side')){

            var target = self.cards[event.target.parentNode.id];

            //0 - –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            if (target.node.classList.contains('rotate')) {
                return;
            }

            //1 - –ö–ª–∏–∫ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç–æ—á–∫—É + –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –Ω–µ—Å–æ–≤–ø–∞–≤—à–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
            if (!target.node.classList.contains('rotate') && self.cardsSelected.length < 2) {
                
                target.node.classList.add('rotate');

                //1.1 - –ï—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                if (self.cardsSelected.length == 0) {

                    self.cardsSelected[0] = target;
                    self.cardsSelected.length ++ ;
                 
                //1.2 - –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                } else if (self.cardsSelected.length == 1) {

                    self.cardsSelected[1] = target;
                    self.cardsSelected.length ++ ;
                    
                    //–ü—Ä–æ–≤–µ—Ä—è–µ–º 2 –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
                    if (self.cardsSelected[0].value == self.cardsSelected[1].value){

                        self.cardsSelected[0].node.classList.add('match');
                        self.cardsSelected[1].node.classList.add('match');

                        self.cardsSelected = { length: 0 };

                    } else {

                        self.cardsSelected[0].node.classList.add('mismatch');
                        self.cardsSelected[1].node.classList.add('mismatch');
                    }
                }
            //2 - –ö–ª–∏–∫ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç–æ—á–∫—É + –µ—Å—Ç—å 2 –æ—Ç–∫—Ä—ã—Ç—ã–µ –Ω–µ—Å–æ–≤–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            } else if (!target.node.classList.contains('rotate') && self.cardsSelected.length == 2) {
            
                self.cardsSelected[0].node.classList.remove('rotate');
                self.cardsSelected[1].node.classList.remove('rotate');

                self.cardsSelected[0].node.classList.remove('mismatch');
                self.cardsSelected[1].node.classList.remove('mismatch');

                self.cardsSelected = { length: 0 };

                target.node.classList.add('rotate');

                self.cardsSelected[0] = target;
                self.cardsSelected.length ++ ;
                
            }
        }
        
    });

}

//–ù–æ–≤–∞—è –∏–≥—Ä–∞
var myGame = new Game();
myGame.start();

